{%- set name = "$JOB_NAME" -%}
{%- set image = "$IMAGE" -%}
{%- set num_worker = $NUM_WORKER -%}
{%- set num_ps = $NUM_PS -%}
{%- set ps_cpu = "$PS_CPU" -%}
{%- set ps_mem = "$PS_MEM" -%}
{%- set worker_cpu = "$WORKER_CPU" -%}
{%- set worker_mem = "$WORKER_MEM" -%}
{%- set worker_gpu = "$WORKER_GPU" -%}
{%- set replicas = {"worker": num_worker, "ps": num_ps} -%}
{%- set ps_placement = "$PS_PLACEMENT".split(",") -%}
{%- set worker_placement = "$WORKER_PLACEMENT".split(",") -%}
{%- set ps_mount_dirs = "$PS_MOUNT_DIRS".split(",") -%}
{%- set worker_mount_dirs = "$WORKER_MOUNT_DIRS".split(",") -%}
{%- set batch_sizes = "$BATCH_SIZES".split(",") -%}
{%- set work_volume = "$WORK_VOLUME" -%}
{%- set work_dir = "$WORK_DIR" -%}
{%- set data_dir = "$DATA_DIR" -%}
{%- set host_data_dir = "$DATA_MOUNT_DIR" -%}
{%- set data_volume = "$DATA_VOLUME" -%}


{%- macro worker_hosts() -%}
  {%- for i in range(num_worker) -%}
    {%- if not loop.first -%},{%- endif -%}
    {{ name }}-worker-{{ i }}
  {%- endfor -%}
{%- endmacro -%}

{%- macro ps_hosts() -%}
  {%- for i in range(num_ps) -%}
    {%- if not loop.first -%},{%- endif -%}
    {{ name }}-ps-{{ i }}
  {%- endfor -%}
{%- endmacro -%}

{%- for job in ["worker", "ps"] -%}
{%- for i in range(replicas[job]) -%}
kind: Job
apiVersion: batch/v1
metadata:
  name: {{ name }}-{{ job }}-{{ i }}
spec:
  template:
    metadata:
      labels:
        name: {{ name }}
        job: {{ job }}
        task: "{{ i }}"
    spec:
      nodeSelector:
        gpu: gtx1080ti
{%- if job == "worker" %}
        kubernetes.io/hostname: {{ worker_placement[i] }}
{%- else %}
        kubernetes.io/hostname: {{ ps_placement[i] }}
{%- endif %}
      containers:
      - name: {{ name }}
        image: {{ image }}
        imagePullPolicy: IfNotPresent
        command: ["/bin/bash"]
        args: ["$SCRIPT"]
        env:
        - name: JOB_NAME
          value: "{{ name }}"
        - name: DMLC_NUM_WORKER
          value: "{{ num_worker }}"
        - name: DMLC_NUM_SERVER
          value: "{{ num_ps }}"
        - name: ROLE
          value: "{{ job }}"
        - name: PROG
          value: "$PROG"
        - name: WORK_DIR
          value: "{{ work_dir }}"
        - name: DATA_DIR
          value: "{{ data_dir }}"
        - name: KV_STORE
          value: "$KV_STORE"
        - name: BATCH_SIZE
          value: "{{ batch_sizes[i] }}"
        - name: MXNET_KVSTORE_BIGARRAY_BOUND
          value: "$MXNET_KVSTORE_BIGARRAY_BOUND"
        - name: PS_VERBOSE
          value: "$PS_VERBOSE"
        resources:
          limits:
{%- if job == "worker" %}
            cpu: {{ worker_cpu }}
            memory: {{ worker_mem }}
            alpha.kubernetes.io/nvidia-gpu: {{ worker_gpu }}
{%- else %}
            cpu: {{ ps_cpu }}
            memory: {{ ps_mem }}
{%- endif %}
          requests:
{%- if job == "worker" %}
            cpu: {{ worker_cpu }}
            memory: {{ worker_mem }}
            alpha.kubernetes.io/nvidia-gpu: {{ worker_gpu }}
{%- else %}
            cpu: {{ ps_cpu }}
            memory: {{ ps_mem }}
{%- endif %}
        ports:
        - containerPort: 6006
        volumeMounts:
        - mountPath: {{ work_dir }}
          name: {{ work_volume }}
        - mountPath: {{ data_dir }}
          name: {{ data_volume }}
        - mountPath: /usr/local/nvidia/lib
          name: "nvidia-lib"
        - mountPath: /usr/local/nvidia/lib64
          name: "nvidia-lib64"
      volumes:
      - name: {{ work_volume }}
        hostPath:
{%- if job == "worker" %}
          path: {{ worker_mount_dirs[i] }}
{%- else %}
          path: {{ ps_mount_dirs[i] }}
{%- endif %}
      - name: {{ data_volume }}
        hostPath:
          path: {{ host_data_dir }}
      - name: "nvidia-lib"
        hostPath:
          path: /usr/lib/nvidia-384/
      - name: "nvidia-lib64"
        hostPath:
          path: /usr/lib/x86_64-linux-gnu/

      restartPolicy: Never
---
{% endfor %}
{%- endfor -%}

